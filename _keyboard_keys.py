from dragonfly import *
from _decorators import *

ruleList = []

@ChainedRule
class KeypressRule(CompoundRule):  
    spec = "keyName [<keyCount> [times]]"
    extras = IntegerRef("keyCount", 0, 50000),
    defaults = {"keyCount": 1}
    def __init__(self, keyName, voicedAs):
        CompoundRule.__init__(self, 
                              name = "keypress_rule_" + keyName + "_" + voicedAs,
                              spec = self.spec.replace("keyName", voicedAs),
                              )          
        self.keyName = keyName
    def _process_recognition(self, node, extras):
        (Key(self.keyName) * Repeat(extras["keyCount"])).execute()
        
keyboard_keys = [
    ['a', 'cave'],
    ['b', 'book'],
    ['c', 'cricket'],
    ['d', 'dust'],
    ['e', 'baby'],
    ['f', 'flame'],
    ['g', 'ground'],
    ['h', 'huge'],
    ['i', 'silk'],
    ['j', 'judge'],
    ['k', 'kick'],
    ['l', 'lazy'],
    ['m', 'mom'],
    ['n', 'nimble'],
    ['o', 'block'],
    ['p', 'prank'],
    ['q', 'quit'],
    ['r', 'rainy'],
    ['s', 'stress'],
    ['t', 'touch'],
    ['u', 'clue'],
    ['v', 'vivid'],
    ['w', 'wish'],
    ['x', 'flax'],
    ['y', 'yacht'],
    ['z', 'zany'],                 
    ['A', 'upper cave'],
    ['B', 'upper book'],
    ['C', 'upper cricket'],
    ['D', 'upper dust'],
    ['E', 'upper baby'],
    ['F', 'upper flame'],
    ['G', 'upper ground'],
    ['H', 'upper huge'],
    ['I', 'upper silk'],
    ['J', 'upper judge'],
    ['K', 'upper kick'],
    ['L', 'upper lazy'],
    ['M', 'upper mom'],
    ['N', 'upper nimble'],
    ['O', 'upper block'],
    ['P', 'upper prank'],
    ['Q', 'upper quit'],
    ['R', 'upper rainy'],
    ['S', 'upper stress'],
    ['T', 'upper touch'],
    ['U', 'upper clue'],
    ['V', 'upper vivid'],
    ['W', 'upper wish'],
    ['X', 'upper flax'],
    ['Y', 'upper yacht'],
    ['Z', 'upper zany'],    
    ['0','noon zero'],
    ['1', 'noon one'],
    ['2', 'noon two'],
    ['3', 'noon three'],
    ['4', 'noon four'],
    ['5', 'noon five'],
    ['6','noon six'],
    ['7','noon seven'],
    ['8','noon eight'],
    ['9','noon nine'],
    ['f1', 'fun one'],
    ['f2', 'fun two'],
    ['f3', 'fun three'],
    ['f4', 'fun four'],
    ['f5', 'fun five'],
    ['f6', 'fun six'],
    ['f7', 'fun seven'],
    ['f8', 'fun eight'],
    ['f9', 'fun nine'],
    ['f10', 'fun ten'],
    ['f11', 'fun eleven'],
    ['f12', 'fun twelve'],
    ['ampersand', 'amp'],                
    ['apostrophe', 'stroph'],
    ['alt', 'salt'],
    ['apps', 'apple'],
    ['asterisk', 'star'],
    ['at', 'at'],
    ['backslash', 'bash'],
    ['backspace', 'back'],
    ['backtick', 'grave'],
    ['bar', 'pipe'],
    ['caret', 'hat'],
    ['ctrl', 'troll'],
    ['colon', 'colon'],
    ['comma', 'verge'],
    ['delete', 'dell'],
    ['dollar', 'cash'],
    ['.', 'speck'],
    ['down', 'down'],
    ['dquote', 'quote'],
    ['end', 'end'],
    ['enter', 'enter'],
    ['equal', 'quiv'],
    ['escape', 'scape'],
    ['exclamation', 'claim'],
    ['hash', 'hash'],
    ['home', 'home'],
    ['hyphen', 'hiff'],
    ['insert', 'insert'],
    ['langle', 'lang'],
    ['lbrace', 'lace'],
    ['lbracket', 'lack'],
    ['left', 'left'],
    ['lparen', 'plen'],
    ['minus', 'sub'],
    ['percent', 'odds'],
    ['pgdown', 'jown'],
    ['pgup', 'jup'],
    ['plus', 'more'],
    ['question', 'what'],
    ['rangle', 'rang'],
    ['rbrace', 'race'],
    ['rbracket', 'rack'],
    ['right', 'right'],
    ['rparen', 'pren'],
    ['semicolon', 'semi'],
    ['shift', 'shift'],
    ['slash', 'slash'],
    ['space', 'space'],
    ['tab', 'tab'],
    ['tilde', 'squid'],
    ['underscore', 'score'],
    ['up', 'up'],
    ['win', 'doze'],
]

for keyName, voicedAs in keyboard_keys:
    ruleList.append(KeypressRule(keyName, voicedAs))